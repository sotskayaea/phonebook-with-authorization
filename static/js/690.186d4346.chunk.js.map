{"version":3,"file":"static/js/690.186d4346.chunk.js","mappings":"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","sources":["webpack://phonebook-with-authorization/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook-with-authorization/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook-with-authorization/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://phonebook-with-authorization/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook-with-authorization/./src/pages/Phonebook/Phonebook.module.css?1c37","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from 'nanoid';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport style from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nconst ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n    const contactData = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n    const foundContact = contacts.find(\n      contact => contact.name === contactData.name\n    );\n    if (foundContact) {\n      alert(`Sorry, ${foundContact.name} is already in the contact list`);\n      e.currentTarget.reset();\n      return;\n    }\n    console.log(contactData);\n    dispatch(addContact(contactData));\n    e.currentTarget.reset();\n  };\n  return (\n    <form onSubmit={onHandleSubmit} className={style.contactForm}>\n      <label className={style.label}>\n        Name\n        <input type=\"text\" name=\"name\" className={style.input} required />\n      </label>\n      <label className={style.label}>\n        Phone\n        <input className={style.input} type=\"tel\" name=\"number\" required />\n      </label>\n      <button className={style.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n// export default class ContactForm extends Component {\n//   onHandleSubmit = e => {\n//     e.preventDefault();\n//     const name = e.currentTarget.elements.name.value;\n//     const number = e.currentTarget.elements.number.value;\n//     const contactData = {\n//       id: nanoid(),\n//       name: name,\n//       number: number,\n//     };\n//     const foundContact = this.props.contacts.find(\n//       contact => contact.name === contactData.name\n//     );\n//     if (foundContact) {\n//       alert(`Sorry, ${foundContact.name} is already in the contact list`);\n//       e.currentTarget.reset();\n//       return;\n//     }\n//     this.props.onAddContact(contactData);\n//     e.currentTarget.reset();\n//   };\n//   render() {\n//     return (\n//       <form onSubmit={this.onHandleSubmit}>\n//         <label>\n//           Name\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </label>\n//         <label>\n//           Phone\n//           <input\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </label>\n//         <button type=\"submit\">Add Contact</button>\n//       </form>\n//     );\n//   }\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/filterSliceReducer';\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={style.filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(filterValue(e.currentTarget.value))}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactItem_button__IRFBz\",\"contactList__item\":\"ContactItem_contactList__item__BuwOu\",\"active\":\"ContactItem_active__kqdyi\",\"contact_wrap\":\"ContactItem_contact_wrap__Zw6ZO\",\"name_wrap\":\"ContactItem_name_wrap__R0JSH\",\"contactList__button\":\"ContactItem_contactList__button__Jo+tx\",\"updateButtons\":\"ContactItem_updateButtons__1AU3P\",\"editIcon\":\"ContactItem_editIcon__zg3Ly\",\"input_wrap\":\"ContactItem_input_wrap__vBzpI\",\"input_container\":\"ContactItem_input_container__iC43K\",\"input_field\":\"ContactItem_input_field__B6z4T\",\"button_container\":\"ContactItem_button_container__GYLnR\",\"save_button\":\"ContactItem_save_button__NNasf\",\"cancel_button\":\"ContactItem_cancel_button__9JMGQ\"};","import style from './ContactItem.module.css';\nimport editIcon from '../../image/edit.png';\nimport {\n  fetchAllContacts,\n  deleteContact,\n  editContact,\n} from '../../redux/contacts/operations';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport cn from 'classnames';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isShowEditModal, setIsShowEditModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newPhone, setNewPhone] = useState(contact.number);\n\n  const deleteUpdateContacts = contactId => {\n    dispatch(deleteContact(contactId)).then(() => {\n      return dispatch(fetchAllContacts());\n    });\n  };\n\n  const onOpenEditForm = () => {\n    setIsShowEditModal(true);\n  };\n\n  const onCancelBtn = () => {\n    setIsShowEditModal(false);\n    setNewName(contact.name);\n    setNewPhone(contact.number);\n  };\n\n  const onSubmitEditForm = e => {\n    e.preventDefault();\n    setIsShowEditModal(false);\n\n    const newContact = {\n      ...contact,\n      name: newName,\n      number: newPhone,\n    };\n\n    console.log(newContact);\n    dispatch(editContact(newContact));\n  };\n\n  return (\n    <li\n      className={cn(style.contactList__item, {\n        [style.active]: isShowEditModal,\n      })}\n    >\n      <div className={style.contact_wrap}>\n        <div className={style.name_wrap}>\n          <p>{contact.name}</p>\n          <p>{contact.number}</p>\n        </div>\n        <ul className={style.updateButtons}>\n          <li>\n            <button\n              type=\"button\"\n              onClick={() => deleteUpdateContacts(contact.id)}\n              className={style.contactList__button}\n            >\n              Delete\n            </button>\n          </li>\n          <li>\n            <button\n              className={style.edit_button}\n              type=\"button\"\n              onClick={onOpenEditForm}\n            >\n              <img className={style.editIcon} src={editIcon} alt=\"edit-icon\" />\n            </button>\n          </li>\n        </ul>\n      </div>\n      <div className={style.drop_down}>\n        <form\n          className={style.edit_form}\n          onSubmit={onSubmitEditForm}\n          autoComplete=\"none\"\n        >\n          <div className={style.input_wrap}>\n            <div className={style.input_container}>\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                value={newName}\n                onChange={e => setNewName(e.target.value)}\n                className={style.input_field}\n              />\n            </div>\n            <div className={style.input_container}>\n              <label htmlFor=\"number\">Phone:</label>\n              <input\n                type=\"tel\"\n                id=\"number\"\n                value={newPhone}\n                onChange={e => setNewPhone(e.target.value)}\n                className={style.input_field}\n              />\n            </div>\n          </div>\n          <div className={style.button_container}>\n            <button type=\"submit\" className={style.save_button}>\n              Save\n            </button>\n            <button\n              type=\"button\"\n              className={style.cancel_button}\n              onClick={onCancelBtn}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListWrapper\":\"ContactList_contactListWrapper__QKp7O\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactList__item\":\"ContactList_contactList__item__2K2vx\",\"contactList__button\":\"ContactList_contactList__button__6ARfg\",\"noContactsMessage\":\"ContactList_noContactsMessage__HA19C\",\"updateButtons\":\"ContactList_updateButtons__n3NqN\",\"editIcon\":\"ContactList_editIcon__SgDt8\",\"drop_down\":\"ContactList_drop_down__OWs+3\"};","import { fetchAllContacts } from '../../redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(item => {\n    const contact = item.name.toLowerCase();\n    return contact.includes(filter.toLowerCase());\n  });\n\n  return (\n    <div className={style.contactListWrapper}>\n      {isLoading && (\n        <ThreeDots\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          color=\"#d50000\"\n          radius=\"9\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n        />\n      )}\n      {filteredContacts.length === 0 && !isLoading ? (\n        <p className={style.noContactsMessage}>\n          Oops... you don`t have any contacts.\n        </p>\n      ) : (\n        <ul className={style.contactList}>\n          {filteredContacts.map(contact => {\n            return <ContactItem key={contact.id} contact={contact} />;\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__x2sE5\",\"title\":\"Phonebook_title__8U+0x\",\"subtitle\":\"Phonebook_subtitle__vazXY\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport style from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  return (\n    <div className={style.phonebook}>\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={style.subtitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["contacts","useSelector","state","items","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","name","currentTarget","elements","value","number","contactData","id","nanoid","foundContact","find","contact","alert","concat","reset","console","log","addContact","className","style","children","_jsx","type","required","filter","onChange","filterValue","_ref","_useState","useState","_useState2","_slicedToArray","isShowEditModal","setIsShowEditModal","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newPhone","setNewPhone","cn","_defineProperty","onClick","contactId","deleteContact","then","fetchAllContacts","src","editIcon","alt","newContact","_objectSpread","editContact","autoComplete","htmlFor","target","isLoading","useEffect","filteredContacts","item","toLowerCase","includes","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","length","map","ContactItem","ContactForm","Filter","ContactList"],"sourceRoot":""}